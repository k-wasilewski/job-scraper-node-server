import React, {useEffect, useState} from "react";
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import {addFakeUser, deleteFakeUser, getFakesers, getUser, getUsers} from "./requests";

const renderUser = (user) => {
  return (
      <>
        <p>id: {user.id}</p>
        <p>title: {user.title}</p>
        <p>completed: {user.completed.toString()}</p>
      </>
  );
}

export default function Home() {
  const [users, setUsers] = useState([]);
  const [fakeusers, setFakeusers] = useState([]);
  const [user, setUser] = useState(null);
  const [input, setInput] = useState('');
  const [fakeIdInput, setFakeIdInput] = useState('');
  const [fakeTitleInput, setFakeTitleInput] = useState('');
  const [deletefakeIdInput, setDeletefakeIdInput] = useState('');

  useEffect(async () => {
    getFakeUsers();
    getUsers().then(resp => {
      if (resp.status === 200 && resp.data?.data?.getUsers) setUsers(resp.data.data.getUsers);
      else setUsers([]);
    })
  }, []);

  const getFakeUsers = () => {
    getFakesers().then(resp => {
      if (resp.status === 200 && resp.data?.data?.getFakeUsers) setFakeusers(resp.data.data.getFakeUsers);
      else setFakeusers([]);
    });
  }

  const handleDeleteFakeButtonClick = () => {
    deleteFakeUser(deletefakeIdInput).then(resp => {
      if (resp.status === 200 && resp.data?.data?.deleteFakeUser) getFakeUsers();
    });
  }

  const handleFakeButtonClick = () => {
    addFakeUser(fakeIdInput, fakeTitleInput).then(resp => {
      if (resp.status === 200 && resp.data?.data?.addFakeUser) getFakeUsers();
    });
  }

  const setFakeIdInputValue = (e) => {
    setFakeIdInput(e.target.value);
  }

  const setFakeTitleInputValue = (e) => {
    setFakeTitleInput(e.target.value);
  }

  const setDeleteFakeIdInputValue = (e) => {
    setDeletefakeIdInput(e.target.value);
  }

  const handleButtonClick = () => {
    getUser(input).then(resp => {
      if (resp.status === 200 && resp.data?.data?.getUser) setUser(resp.data.data.getUser);
      else setUser();
    })
  }

  const setInputValue = (e) => {
    setInput(e.target.value);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>
        Fake users:
        <p>{fakeusers.length ? fakeusers.map(user => renderUser(user)) : ''}</p>

        Add a fake user:
        <input type='text' placeholder='Id' onChange={setFakeIdInputValue}/>
        <input type='text' placeholder='Title' onChange={setFakeTitleInputValue}/>
        <button onClick={handleFakeButtonClick}>Add</button>

        Delete a fake user:
        <input type='text' placeholder='Id' onChange={setDeleteFakeIdInputValue}/>
        <button onClick={handleDeleteFakeButtonClick}>Delete</button>

        First 3 users:
        <p>{users.length ? users.filter((u, i) => i <= 3).map(user => renderUser(user)) : ''}</p>

        Find user by id:
        <input type='text' onChange={setInputValue}/>
        <button onClick={handleButtonClick}>Find</button>
        Selected user:
        <p>{user ? renderUser(user) : ''}</p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
